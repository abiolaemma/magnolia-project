magnoliaLightModuleUpdater:
  privateKey: "MzA4MjAyNzcwMjAxMDAzMDBkMDYwOTJhODY0ODg2ZjcwZDAxMDEwMTA1MDAwNDgyMDI2MTMwODIwMjVkMDIwMTAwMDI4MTgxMDBiZTZiMzViMzgzQ1ZWZjMWUyNjUyNjY4ZmI0ZmE4YWNiMmM4ZDllNmJlNGU0N2JjYzIzOWYyYzJiODMzYmE2NjI2NGM4MGYwZjlmYTAxMWY5MWU1NWZkMjUxOTI3YmUyNTFkMzBhMjdlMDk4OTg3N2YwMTdjYmEzODViMWJiOTQwN2MzZDkyNjBhZTdlMTE2ZTk0MDM3Yjgx
  NDE0YTUwYjg3Zjk4NGI2N2NmZmZlNjFhMTRiNzRmNjdmYmQ4NzU3NzQ2N2YzZDMwMDBjMWU2ODE2OTEyNjdlM2JlYTI4N2U4ODI2OGEzZWZkZjU1ZmFlMDAxZjE2NzY4ZDc0NjY1MDIwMzAxMDAwMTAy
  ODE4MDAxNTg2MjhkYmQxOGYwOWVkOTViYWRmMzU5OGE4ZWM2OTIzZWUzNTUzZTJmZTRjOTU3MWNkZDUwMDM5MmFlYzYzMzI1YzEyMDEyMWQyZjk1NTBlYzNjZjE0N2U0ZDA5YTEwNGIwZjdmZTY2MjBj
  ZGRhZjMxMDQ3ZjkwNGM1YzdhYzQ3MjNhYzk4MmM0ZmM3Mjg0MjNmYmY4NzJjNWMzMDBhZTIwNmEyOTIyNWQxZTU0NDgwMTczZWE2Njk4YWNmNDNjNjlmYTNmMTJjMTg1MjhiOGRhZDliNmM5Njc1OWJm
  NTE4NDQ4MjllYTQ5YTk0YTYxODA4MmYwNWRlMzVjYTEwMjQxMDBkY2YyZGZiODgyNGRjNTA1ZDM3MDJhYTg1NjIzMWUzZGY3YWEzYjNmMWNkYzE1Y2QwZTA1NTljMDI0N2E3NzZiYTk3MTgyMDkyZjhk
  YmRjNTc5NzYwMzc3YTE4YTRhODBlZjliY2IyZTU3M2U1NTUwZDViZjRjZTlhMTcyZTIxZDAyNDEwMGRjYTA3NWM1MWE1ZWYxYjdjYTZhMDE4MDVmODc1OWI4OGU3NzM1N2NjYzMyMDJjMjBkZGRhNTg1
  MDczMjAxZmM1NGEwMThkMjIyNjZlNjIzM2MyOGVkZjZkNDE5MmFkZjA0MmUxZTJlMDUzYzBkNWJhNDA3Y2EyODJjMmM0MmU5MDI0MDRhYzVmYjA2NzMzYWE0NzljMzQzOGI3YzJhYTI3OWUyOThjNTQ4
  ODVhNDViYWIxOTE5MmNhMDYyMTEzNjRjZTFlNzk3MWQ1ZGM0NzUyMDhiMGFmZWYwNGY3NTIwZGFmM2U1YTMwMGQwZWVmZjhlNTllYmVjNzBiODA0NDY1ZmQ1MDI0MTAwZGJmNWQyNTRhNzVjZmY0YWM4
  YjA3NTNjYzI4MTE0MGY2ZjYyMjQ1ZTdlY2E2MTdiOGQwZDZjZTczYWVjM2Q5NDhmZGU2OWMwOWVmMWNlMDI1NTA5NGQ2ZTY3Yjk4YmM3N2FjODZiZTg1ZmU5YTYzYmI2NDZkOWUyYzE1ZjgzNzkwMjQx
  MDBjYzUwMTQ5ZWIzMjEyYWU3YjQwOTEzNTJhYWQ3N2RhOTIxNjM5ZDcwYTEyZThkOWM3NWY5N2VkOTEyNTE1OGMwZTg4NDQyNTc0ZDU1MTQzYTBjYTNjNjM3M2NkMTZhMDQ4NmY5MTA5MDdkNTIwMzg2
  NjZkY2ZiNTAxYWNjODc0Ygo=" # Pass this base64 encoded  
  repoUrl: ""
  tag: false # change this to true to checkout a tag from the coresponding config map or to a specific version to hardcode that
  branch: "master"
  sourceDir: "/"
  image:
    repository: adminclouddocker/mgnl-light-module-updater
    tag: latest
    pullPolicy: Always
    pullSecret: {}
  resources:
    requests:
      memory: 50M
      cpu: 0.1
    limits:
      memory: 250M
magnoliaRuntime:
  image:
    repository: neoskop/mgnl-runtime-env
    tag: 9.0.54
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 2560M
      cpu: 250m
    limits:
      memory: 4096M
magnoliaWebapp:
  image:
    repository: neoskop/mgnl-webapp-ce
    tag: 6.2.40
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 100Mi
      cpu: "0.1"
    limits:
      memory: 100Mi
tmpInit:
  image:
    repository: busybox
    tag: 1.36.1
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 20Mi
      cpu: 10m
    limits:
      memory: 20Mi
mysqlInit:
  image:
    repository: busybox
    tag: 1.36.1
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 20Mi
      cpu: "0.01"
    limits:
      memory: 20Mi
mysql:
  enabled: true
  rootPassword: ""
  image:
    repository: mysql
    tag: 8.2.0
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 200Mi
    limits:
      memory: 500Mi
  storage:
    resources:
      requests:
        storage: 3Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
magnoliaTmp:
  storage:
    resources:
      requests:
        storage: 250m
magnoliaActivation:
  privateKey: ""
  publicKey: ""
paperboy:
  token: ""
  userPassword: ""
  webhookUrl: http://paperboy-push-service.paperboy.svc.cluster.local:8080/
paperboyPreview:
  token: ""
  userPassword: ""
  webhookUrl: http://paperboy-preview-push-service.paperboy.svc.cluster.local:8080/
magnoliaPublic:
  replicaCount: 1
  configName: livePublic
  customEnv: {}
  datasource:
    host: "" # If empty the created service is used
    port: 3306
    username: "" # If empty the value is derived automatically
    password: ""
    database: "" # If empty the value is derived automatically
    name: MagnoliaPublic
  assetIngress:
    enabled: false
    hostname: magnolia-public-assets.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /dam/$1
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Robots-Tag: noindex";
  ingress:
    enabled: true
    hostname: magnolia-public.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations: {}
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - magnolia-public
          topologyKey: "kubernetes.io/hostname"
magnoliaAuthor:
  replicaCount: 1
  configName: liveAuthor
  customEnv: {}
  datasource:
    host: "" # If empty the created service is used
    port: 3306
    username: "" # If empty the value is derived automatically
    password: ""
    database: "" # If empty the value is derived automatically
    name: MagnoliaAuthor
  assetIngress:
    enabled: false
    hostname: magnolia-author-assets.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /dam/$1
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Robots-Tag: noindex";
  ingress:
    enabled: true
    hostname: magnolia-author.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations: {}
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - magnolia-author
          topologyKey: "kubernetes.io/hostname"
keel:
  enabled: true
  annotations:
    keel.sh/policy: minor
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
nameOverride: ""
fullnameOverride: ""
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
